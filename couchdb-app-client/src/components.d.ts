/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */
declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';
import '@stencil/router';


import {
  AppAuth as AppAuth
} from './components/app-auth/app-auth';

declare global {
  interface HTMLAppAuthElement extends AppAuth, HTMLStencilElement {
  }
  var HTMLAppAuthElement: {
    prototype: HTMLAppAuthElement;
    new (): HTMLAppAuthElement;
  };
  interface HTMLElementTagNameMap {
    "app-auth": HTMLAppAuthElement;
  }
  interface ElementTagNameMap {
    "app-auth": HTMLAppAuthElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-auth": JSXElements.AppAuthAttributes;
    }
  }
  namespace JSXElements {
    export interface AppAuthAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppConnection as AppConnection
} from './components/app-connection/app-connection';

declare global {
  interface HTMLAppConnectionElement extends AppConnection, HTMLStencilElement {
  }
  var HTMLAppConnectionElement: {
    prototype: HTMLAppConnectionElement;
    new (): HTMLAppConnectionElement;
  };
  interface HTMLElementTagNameMap {
    "app-connection": HTMLAppConnectionElement;
  }
  interface ElementTagNameMap {
    "app-connection": HTMLAppConnectionElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-connection": JSXElements.AppConnectionAttributes;
    }
  }
  namespace JSXElements {
    export interface AppConnectionAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppError as AppError
} from './components/app-error/app-error';

declare global {
  interface HTMLAppErrorElement extends AppError, HTMLStencilElement {
  }
  var HTMLAppErrorElement: {
    prototype: HTMLAppErrorElement;
    new (): HTMLAppErrorElement;
  };
  interface HTMLElementTagNameMap {
    "app-error": HTMLAppErrorElement;
  }
  interface ElementTagNameMap {
    "app-error": HTMLAppErrorElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-error": JSXElements.AppErrorAttributes;
    }
  }
  namespace JSXElements {
    export interface AppErrorAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppHeader as AppHeader
} from './components/app-header/app-header';

declare global {
  interface HTMLAppHeaderElement extends AppHeader, HTMLStencilElement {
  }
  var HTMLAppHeaderElement: {
    prototype: HTMLAppHeaderElement;
    new (): HTMLAppHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "app-header": HTMLAppHeaderElement;
  }
  interface ElementTagNameMap {
    "app-header": HTMLAppHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-header": JSXElements.AppHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHeaderAttributes extends HTMLAttributes {
      back?: any;
      htitle?: any;
      logout?: any;
      menu?: any;
    }
  }
}


import {
  AppHome as AppHome
} from './components/app-home/app-home';

declare global {
  interface HTMLAppHomeElement extends AppHome, HTMLStencilElement {
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-home": JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppLogin as AppLogin
} from './components/app-login/app-login';

declare global {
  interface HTMLAppLoginElement extends AppLogin, HTMLStencilElement {
  }
  var HTMLAppLoginElement: {
    prototype: HTMLAppLoginElement;
    new (): HTMLAppLoginElement;
  };
  interface HTMLElementTagNameMap {
    "app-login": HTMLAppLoginElement;
  }
  interface ElementTagNameMap {
    "app-login": HTMLAppLoginElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-login": JSXElements.AppLoginAttributes;
    }
  }
  namespace JSXElements {
    export interface AppLoginAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppLogo as AppLogo
} from './components/app-logo/app-logo';

declare global {
  interface HTMLAppLogoElement extends AppLogo, HTMLStencilElement {
  }
  var HTMLAppLogoElement: {
    prototype: HTMLAppLogoElement;
    new (): HTMLAppLogoElement;
  };
  interface HTMLElementTagNameMap {
    "app-logo": HTMLAppLogoElement;
  }
  interface ElementTagNameMap {
    "app-logo": HTMLAppLogoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-logo": JSXElements.AppLogoAttributes;
    }
  }
  namespace JSXElements {
    export interface AppLogoAttributes extends HTMLAttributes {
      width?: string;
    }
  }
}


import {
  AppMain as AppMain
} from './components/app-main/app-main';

declare global {
  interface HTMLAppMainElement extends AppMain, HTMLStencilElement {
  }
  var HTMLAppMainElement: {
    prototype: HTMLAppMainElement;
    new (): HTMLAppMainElement;
  };
  interface HTMLElementTagNameMap {
    "app-main": HTMLAppMainElement;
  }
  interface ElementTagNameMap {
    "app-main": HTMLAppMainElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-main": JSXElements.AppMainAttributes;
    }
  }
  namespace JSXElements {
    export interface AppMainAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppMenu as AppMenu
} from './components/app-menu/app-menu';

declare global {
  interface HTMLAppMenuElement extends AppMenu, HTMLStencilElement {
  }
  var HTMLAppMenuElement: {
    prototype: HTMLAppMenuElement;
    new (): HTMLAppMenuElement;
  };
  interface HTMLElementTagNameMap {
    "app-menu": HTMLAppMenuElement;
  }
  interface ElementTagNameMap {
    "app-menu": HTMLAppMenuElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-menu": JSXElements.AppMenuAttributes;
    }
  }
  namespace JSXElements {
    export interface AppMenuAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppNewsCreate as AppNewsCreate
} from './components/app-news-create/app-news-create';

declare global {
  interface HTMLAppNewsCreateElement extends AppNewsCreate, HTMLStencilElement {
  }
  var HTMLAppNewsCreateElement: {
    prototype: HTMLAppNewsCreateElement;
    new (): HTMLAppNewsCreateElement;
  };
  interface HTMLElementTagNameMap {
    "app-news-create": HTMLAppNewsCreateElement;
  }
  interface ElementTagNameMap {
    "app-news-create": HTMLAppNewsCreateElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-news-create": JSXElements.AppNewsCreateAttributes;
    }
  }
  namespace JSXElements {
    export interface AppNewsCreateAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppNewsDisplay as AppNewsDisplay
} from './components/app-news-display/app-news-display';

declare global {
  interface HTMLAppNewsDisplayElement extends AppNewsDisplay, HTMLStencilElement {
  }
  var HTMLAppNewsDisplayElement: {
    prototype: HTMLAppNewsDisplayElement;
    new (): HTMLAppNewsDisplayElement;
  };
  interface HTMLElementTagNameMap {
    "app-news-display": HTMLAppNewsDisplayElement;
  }
  interface ElementTagNameMap {
    "app-news-display": HTMLAppNewsDisplayElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-news-display": JSXElements.AppNewsDisplayAttributes;
    }
  }
  namespace JSXElements {
    export interface AppNewsDisplayAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppNewsItem as AppNewsItem
} from './components/app-news-item/app-news-item';

declare global {
  interface HTMLAppNewsItemElement extends AppNewsItem, HTMLStencilElement {
  }
  var HTMLAppNewsItemElement: {
    prototype: HTMLAppNewsItemElement;
    new (): HTMLAppNewsItemElement;
  };
  interface HTMLElementTagNameMap {
    "app-news-item": HTMLAppNewsItemElement;
  }
  interface ElementTagNameMap {
    "app-news-item": HTMLAppNewsItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-news-item": JSXElements.AppNewsItemAttributes;
    }
  }
  namespace JSXElements {
    export interface AppNewsItemAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppPage as AppPage
} from './components/app-page/app-page';

declare global {
  interface HTMLAppPageElement extends AppPage, HTMLStencilElement {
  }
  var HTMLAppPageElement: {
    prototype: HTMLAppPageElement;
    new (): HTMLAppPageElement;
  };
  interface HTMLElementTagNameMap {
    "app-page": HTMLAppPageElement;
  }
  interface ElementTagNameMap {
    "app-page": HTMLAppPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-page": JSXElements.AppPageAttributes;
    }
  }
  namespace JSXElements {
    export interface AppPageAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppPopover as AppPopover
} from './components/app-popover/app-popover';

declare global {
  interface HTMLAppPopoverElement extends AppPopover, HTMLStencilElement {
  }
  var HTMLAppPopoverElement: {
    prototype: HTMLAppPopoverElement;
    new (): HTMLAppPopoverElement;
  };
  interface HTMLElementTagNameMap {
    "app-popover": HTMLAppPopoverElement;
  }
  interface ElementTagNameMap {
    "app-popover": HTMLAppPopoverElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-popover": JSXElements.AppPopoverAttributes;
    }
  }
  namespace JSXElements {
    export interface AppPopoverAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppPouchDB as AppPouchdb
} from './components/app-pouchdb/app-pouchdb';

declare global {
  interface HTMLAppPouchdbElement extends AppPouchdb, HTMLStencilElement {
  }
  var HTMLAppPouchdbElement: {
    prototype: HTMLAppPouchdbElement;
    new (): HTMLAppPouchdbElement;
  };
  interface HTMLElementTagNameMap {
    "app-pouchdb": HTMLAppPouchdbElement;
  }
  interface ElementTagNameMap {
    "app-pouchdb": HTMLAppPouchdbElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-pouchdb": JSXElements.AppPouchdbAttributes;
    }
  }
  namespace JSXElements {
    export interface AppPouchdbAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppProfile as AppProfile
} from './components/app-profile/app-profile';

declare global {
  interface HTMLAppProfileElement extends AppProfile, HTMLStencilElement {
  }
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-profile": JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppRegister as AppRegister
} from './components/app-register/app-register';

declare global {
  interface HTMLAppRegisterElement extends AppRegister, HTMLStencilElement {
  }
  var HTMLAppRegisterElement: {
    prototype: HTMLAppRegisterElement;
    new (): HTMLAppRegisterElement;
  };
  interface HTMLElementTagNameMap {
    "app-register": HTMLAppRegisterElement;
  }
  interface ElementTagNameMap {
    "app-register": HTMLAppRegisterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-register": JSXElements.AppRegisterAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRegisterAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppSession as AppSession
} from './components/app-session/app-session';

declare global {
  interface HTMLAppSessionElement extends AppSession, HTMLStencilElement {
  }
  var HTMLAppSessionElement: {
    prototype: HTMLAppSessionElement;
    new (): HTMLAppSessionElement;
  };
  interface HTMLElementTagNameMap {
    "app-session": HTMLAppSessionElement;
  }
  interface ElementTagNameMap {
    "app-session": HTMLAppSessionElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-session": JSXElements.AppSessionAttributes;
    }
  }
  namespace JSXElements {
    export interface AppSessionAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  LazyImg as LazyImg
} from './components/lazy-img/lazy-img';

declare global {
  interface HTMLLazyImgElement extends LazyImg, HTMLStencilElement {
  }
  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };
  interface HTMLElementTagNameMap {
    "lazy-img": HTMLLazyImgElement;
  }
  interface ElementTagNameMap {
    "lazy-img": HTMLLazyImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lazy-img": JSXElements.LazyImgAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyImgAttributes extends HTMLAttributes {
      alt?: string;
      src?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
